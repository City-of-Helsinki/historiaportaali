{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{# Check if the image should be printed in original aspect ratio or not #}
{% set original_aspect_ratio = false %}
{% if content.field_original_aspect_ratio[0]['#markup'] == 'true' %}
  {% set original_aspect_ratio = true %}
{% endif %}

{% block paragraph %}
  {% embed "@hdbt/misc/component.twig" with
    {
      component_classes: [
        'component--image',
      ],
      component_content_class: 'image',
    }
  %}
    {% block component_content %}

      <div class="media--image__content">
        {% set caption = content.field_image_caption['#items'].getString() %}
        {% if content.field_image|render %}
          {# The image caption is attached to each image so we need to get it from the media entity #}
          {% for key, image in content.field_image %}
            {% if image.entity %}
              {% if image.entity.hastranslation(language) %}
                {% set media = image.entity.translation(language) %}
              {% else %}
                {% set media = image.entity %}
              {% endif %}
              {% set photographer = media.fields.field_photographer.value %}
              {% if caption is null %}
                {# If paragraph image caption is not set, try to get it from the media entity #}
                {% set caption = media.fields.field_image_caption.0.value %}
              {% endif %}
              {% if photographer %}
                {% set caption = caption is not null ? caption ~ ' ' %}
                {% set caption = caption ~ 'Photo:'|trans ~ ' ' ~ photographer %}
              {% endif %}
            {% endif %}
          {% endfor %}
        {% endif %}
        {# Check if there is image set and print it with correct aspect ratio #}
        {% if content.field_image|render %}
          {% for key, image in content.field_image %}
            {% if image.entity %}
              {% if image.entity.hastranslation(language) %}
                {% set media = image.entity.translation(language) %}
              {% else %}
                {% set media = image.entity %}
              {% endif %}
              {% set alt = content.field_image_caption[0] is not empty ? caption : media.fields.field_media_image.alt %}
              {% if original_aspect_ratio %}
                {% set image =
                  drupal_image(media.fields.field_media_image.entity.uri.value, 'original', {alt: alt}, responsive=true)
                %}
              {% else %}
                {% set image =
                  drupal_image(media.fields.field_media_image.entity.uri.value, 'image__3_2', {alt: alt}, responsive=true)
                %}
              {% endif %}
              {# Link image to media entity page #}
              <div class="media--image__content__image">
                <a href="{{ path('entity.media.canonical', { 'media': media.id }) }}">{{ image }}</a>
              </div>
              <div class="media--image__content__info">
                {% if caption %}
                  <div class="media--image__content__caption">
                    {{ caption }}
                  </div>
                {% endif %}
                {% if media.fields.field_start_year is not empty or media.fields.field_geolocation is not empty %}
                  <div class="divider"></div>
                  
                  <div class="media--image__content__meta">
                    {% if media.fields.field_geolocation is not empty %}
                      <div class="media--image__content__map_link">
                        {% include '@hdbt/misc/icon.twig' with {icon: 'location', label: 'Location marker icon'|t } %}
                        <a href="/{{ language }}/kartta?id={{ media.id() }}">{{ 'Show on map'|t({}, {'context': 'Content'}) }}</a>
                      </div>
                    {% endif %}

                    {% if media.fields.field_start_year.value is not empty %}
                      <div class="media--image__content__era">
                        {% include '@hdbt/misc/icon.twig' with {icon: 'calendar', label: 'Calendar'|t } %}
                        <span class="era__start">{{ media.fields.field_start_year.value }}</span>
                        {% if media.fields.field_end_year.value is not empty %}
                          <span class="era__divider"> - </span>
                          <span class="era__end">{{ media.fields.field_end_year.value }}</span>
                        {% endif %}
                      </div>
                    {% endif %}
                  </div>
                {% endif %}
              </div>
            {% endif %}
          {% endfor %}
        {% else %}
        {# Render placeholder image #}
          <div class="media--image__content__image">
            <div class="image-placeholder">
              {% include "@hdbt/misc/icon.twig" with { icon: 'helsinki' } %}
            </div>
          </div>
          <div class="media--image__content__info">
            {% if caption %}
              <div class="media--image__content__caption">
                {{ caption }}
              </div>
            {% endif %}
          </div>
        {% endif %}
      </div>

    {% endblock component_content %}
  {% endembed %}
{% endblock paragraph %}
