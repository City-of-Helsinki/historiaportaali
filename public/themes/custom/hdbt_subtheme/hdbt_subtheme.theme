<?php

/**
 * @file
 * Functions to support theming in the HDBT Subtheme.
 */

/**
 * Helper function to get the icons path.
 *
 * @return string|null
 *   Returns path for the icons SVG or null.
 */
function hdbt_subtheme_get_icons_path() {
  static $icon_path;
  if (!isset($icon_path)) {
    $theme_handler = \Drupal::service('theme_handler');
    $icon_path = '/' . $theme_handler->getTheme('hdbt_subtheme')->getPath() . '/dist/icons/sprite.svg';

    // Add icons path as a global variable.
    if (!empty($icon_path)) {
      return $icon_path;
    }
  }
  return $icon_path;
}

/**
 * Implements hook_preprocess().
 */
function hdbt_subtheme_preprocess(&$variables) {
  $variables['hdbt_subtheme_icons_path'] = hdbt_subtheme_get_icons_path();
  $variables['#attached']['drupalSettings']['hdbtSubthemeIconsPath'] = $variables['hdbt_subtheme_icons_path'];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter for blocks.
 */
function hdbt_subtheme_theme_suggestions_block_alter(&$suggestions) {
  // Load theme suggestions for blocks from parent theme.
  foreach ($suggestions as &$suggestion) {
    $suggestion = str_replace('hdbt_subtheme_', '', $suggestion);
  }
}

/**
 * Implements hook_preprocess_field().
 */
function hdbt_subtheme_preprocess_field(&$variables, $hook) {
  $field_name = $variables['element']['#field_name'];

  // Provide term's machine name as variable (prefer English)
  if ($field_name == 'field_formats') {
    $field_items = $variables['element']['#items']->getValue();

    foreach ($field_items as $key => $field_item) {
      $format_tid = $field_item['target_id'];
      $format_term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($format_tid);

      if ($format_term->hasTranslation('en')) {
        $english_term = $format_term->getTranslation('en');
        $term_name = $english_term->getName();
      } else {
        $term_name = $format_term->getName();
      }

      $term_machine_name = strtolower(str_replace(' ', '_', $term_name));

      $variables['items'][$key]['term_machine_name'] = $term_machine_name;
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function hdbt_subtheme_theme_suggestions_field_alter(&$suggestions, $variables) {
  $taxonomy_fields = [
    'field__field_keywords',
    'field__field_phenomena',
    'field__field_neighbourhoods',
  ];
  if (count(array_intersect($taxonomy_fields, $suggestions)) > 0) {
    $suggestions[] = 'field__hdbt_taxonomy__' . $variables['element']['#view_mode'];
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function hdbt_subtheme_form_views_exposed_form_alter(&$form, Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form['#id'] == 'views-exposed-form-search-page') {
    // Hide year interval filter and add '/map' link on frontpage search block
    if (\Drupal::service('path.matcher')->isFrontPage()) {
      unset($form['year_interval']);

      $label = 'Show places near me';
      t($label);
      $form['views_exposed_form']['#markup'] = '<a class="hds-button hds-button--primary" href="/map">
                                                  <span class="hds-button__label">' . $label . '</span>
                                                  <span aria-hidden="true" class="hds-icon hds-icon--location"></span>
                                                </a>';
    }
  }
}
